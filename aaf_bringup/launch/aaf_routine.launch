<launch>
    <arg name="machine" default="localhost" />
    <arg name="user" default="" />
    
    <arg name="new_scheduler" default="true" />
    
    <arg name="calendar" default="henry.strands%40hanheide.net" />
    <arg name="config_file" default="$(find voice_output)/conf/aaf_voice.yaml" />


    <!-- NOW when launching in a remote mode it will need the ROS_ENV_LOADER set if not it will leave it empty -->
    <machine name="$(arg machine)" address="$(arg machine)" env-loader="$(optenv ROS_ENV_LOADER )" user="$(arg user)" default="true" />

    <include unless="$(arg new_scheduler)" file="$(find task_executor)/launch/task-scheduler-mdp.launch">
    </include>
    <include if="$(arg new_scheduler)" file="$(find task_executor)/launch/mdp-executor.launch">
    </include>

    <node pkg="gcal_routine" type="gcal_routine_node.py" name="gcal_routine" output="screen" respawn="true">
        <param name="calendar" value="$(arg calendar)" type="string"/>
        <param name="minTimeDelta" value="1" type="int"/>
        <param name="maxTimeDelta" value="2" type="int"/>
    </node>

    <node pkg="wait_action" type="wait_node.py" name="charging_task" output="screen" respawn="true">
    <param name="maximise_duration_delta" value="600" type="int"/>
    <param name="interruptible" value="true" type="bool"/>
    </node>

    <node pkg="wait_action" type="wait_node.py" name="maintenance_task" output="screen" respawn="true">
    <param name="maximise_duration_delta" value="600" type="int"/>
    <param name="interruptible" value="false" type="bool"/>
    </node>

    <node pkg="voice_output" type="task_monitor.py" name="task_monitor" output="screen" respawn="true">
        <param name="config_file" value="$(arg config_file)" type="string"/>
    </node>

</launch>
